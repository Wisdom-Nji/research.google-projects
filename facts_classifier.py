# -*- coding: utf-8 -*-
"""Word Vector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v2cEZ_IxUVefq_DMX2IF91dBMXKPfic9

python -m spacy download en_core_web_lg
"""

import spacy
import csv
import pickle
from sklearn import svm


def get_training_data( csvfilename, col_training_data, col_training_data_labels ):
    csvfile = open( csvfilename, "r" )
    csvfile_reader = csv.DictReader( csvfile, delimiter=',' )

    line_counter = 0
    training_data = []
    training_data_labels = []

    for row in csvfile_reader:
        training_data.append( row[col_training_data] )
        training_data_labels.append( row[col_training_data_labels] )

    print(f"$ len(training_data):{len(training_data)}\n$ len(training_data_labels):{len(training_data_labels)}")

    return {"data": training_data, "labels": training_data_labels}


DATASET_FILENAME = "data_gathering/data/dataset.csv"
labelled_dataset = get_training_data(DATASET_FILENAME, "text", "type")

nlp = spacy.load("en_core_web_md")

# training cat data
docs = [nlp(text) for text in labelled_dataset["data"]]
data_word_vectors = [x.vector for x in docs]

# clf_svm_wv = svm.SVC(kernel='linear')
clf_svm_wv = svm.SVC(kernel='rbf')
clf_svm_wv.fit(data_word_vectors, labelled_dataset["labels"])

'''
# Using Pickle to save the file
cat_fit_dump = pickle.dumps( clf_svm_wv)
print( "pickle dump:", cat_fit_dump )
# TODO: write this to file
# TODO: read the file using: https://stackoverflow.com/a/35068080
'''

test_input = [ "We can change the way we input the files" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "The Sun is a star" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "My neck hurts" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "I need to sleep" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "Tomorrow is Tuesday" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "This is my first day at work" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "The sky is blue" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")

test_input = [ "Studies have shown the Earth is spherical" ]
test_docs = [nlp(text) for text in test_input]
test_input_vectors = [x.vector for x in test_docs]
print(f"(prediction)$ ({test_input})_ {clf_svm_wv.predict( test_input_vectors )}")
